{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\batuhan.sahin\\\\Desktop\\\\react\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'https://localhost:7044/api/Home'; // Replace with your API endpoint\n\nconst Chatbot = () => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [currentSessionId, setCurrentSessionId] = useState(null);\n  const sendMessage = async () => {\n    try {\n      const response = await axios.post(API_BASE_URL, {\n        Message: inputMessage,\n        NewSession: currentSessionId === null,\n        // Start a new session for the first message\n        CurrentSessionId: currentSessionId // Provide the current session ID for subsequent messages\n      });\n\n      const answer = response.data.message;\n      const id = response.data.currentSessionId;\n      setConversation(prevConversation => [...prevConversation, {\n        user: inputMessage,\n        bot: answer\n      }]);\n      setCurrentSessionId(id); // Update the session ID for subsequent messages\n      setInputMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setInputMessage(event.target.value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (inputMessage.trim() !== '') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: conversation.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? 'user-message' : 'bot-message'}`,\n        children: [message.user ? 'You:' : 'Bot:', \" \", message.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: handleInputChange,\n        placeholder: \"Ask a question...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"jkh8VSQ0yywGLFPi3XPqsxiRxcE=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_BASE_URL","Chatbot","_s","inputMessage","setInputMessage","conversation","setConversation","currentSessionId","setCurrentSessionId","sendMessage","response","post","Message","NewSession","CurrentSessionId","answer","data","message","id","prevConversation","user","bot","error","console","handleInputChange","event","target","value","handleFormSubmit","preventDefault","trim","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/batuhan.sahin/Desktop/react/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css'\r\n\r\nconst API_BASE_URL = 'https://localhost:7044/api/Home'; // Replace with your API endpoint\r\n\r\nconst Chatbot = () => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(null);\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const response = await axios.post(API_BASE_URL, {\r\n        Message: inputMessage,\r\n        NewSession: currentSessionId === null, // Start a new session for the first message\r\n        CurrentSessionId: currentSessionId, // Provide the current session ID for subsequent messages\r\n      });\r\n\r\n      const answer = response.data.message;\r\n      const id = response.data.currentSessionId;\r\n      setConversation((prevConversation) => [\r\n        ...prevConversation,\r\n        { user: inputMessage, bot: answer },\r\n      ]);\r\n      setCurrentSessionId(id); // Update the session ID for subsequent messages\r\n      setInputMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputMessage(event.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (inputMessage.trim() !== '') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div>\r\n        {conversation.map((message, index) => (\r\n          <div\r\n            className={`message ${message.user ? 'user-message' : 'bot-message'}`}\r\n            key={index}\r\n          >\r\n            {message.user ? 'You:' : 'Bot:'} {message.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleFormSubmit} className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Ask a question...\"\r\n          className=\"chat-input\"\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary send-button\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
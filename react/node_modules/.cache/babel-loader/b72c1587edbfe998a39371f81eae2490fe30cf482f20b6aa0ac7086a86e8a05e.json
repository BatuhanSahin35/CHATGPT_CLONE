{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\batuhan.sahin\\\\Desktop\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Replace 'YOUR_WEBSOCKET_URL' with the actual WebSocket URL of your API endpoint\n    const apiUrl = 'https://localhost:7044/api/Home';\n    const newSocket = new WebSocket(apiUrl);\n    setSocket(newSocket);\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        setResponse(data.message);\n      };\n      socket.onerror = event => {\n        console.error('WebSocket error:', event);\n      };\n    }\n  }, [socket]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      console.error('WebSocket connection is not open.');\n      return;\n    }\n    const payload = {\n      message: message,\n      newSession: false // Set to true if you want to start a new session\n    };\n\n    socket.send(JSON.stringify(payload));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat with GPT-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Bot: \", response]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"UXF/yDoG8M/azB3B65SLszkfhPY=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","response","setResponse","socket","setSocket","apiUrl","newSocket","WebSocket","close","onmessage","event","data","JSON","parse","onerror","console","error","handleSubmit","e","preventDefault","readyState","OPEN","payload","newSession","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/batuhan.sahin/Desktop/react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ChatBot = () => {\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Replace 'YOUR_WEBSOCKET_URL' with the actual WebSocket URL of your API endpoint\n    const apiUrl = 'https://localhost:7044/api/Home';\n    const newSocket = new WebSocket(apiUrl);\n    setSocket(newSocket);\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        setResponse(data.message);\n      };\n\n      socket.onerror = (event) => {\n        console.error('WebSocket error:', event);\n      };\n    }\n  }, [socket]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      console.error('WebSocket connection is not open.');\n      return;\n    }\n\n    const payload = {\n      message: message,\n      newSession: false, // Set to true if you want to start a new session\n    };\n\n    socket.send(JSON.stringify(payload));\n  };\n\n  return (\n    <div>\n      <h1>Chat with GPT-3</h1>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n        {response && <div>Bot: {response}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}